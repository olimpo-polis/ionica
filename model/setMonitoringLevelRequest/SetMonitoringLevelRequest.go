// Code generated by github.com/atombender/go-jsonschema, DO NOT EDIT.

package setMonitoringLevelRequest

import "encoding/json"
import "fmt"

// This class does not get 'AdditionalProperties = false' in the schema generation,
// so it can be extended with arbitrary JSON properties to allow adding custom
// data.
type CustomDataType struct {
	// VendorId corresponds to the JSON schema field "vendorId".
	VendorId string `json:"vendorId" yaml:"vendorId" mapstructure:"vendorId"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *CustomDataType) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["vendorId"]; raw != nil && !ok {
		return fmt.Errorf("field vendorId in CustomDataType: required")
	}
	type Plain CustomDataType
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	if len(plain.VendorId) > 255 {
		return fmt.Errorf("field %s length: must be <= %d", "vendorId", 255)
	}
	*j = CustomDataType(plain)
	return nil
}

type SetMonitoringLevelRequestJson struct {
	// CustomData corresponds to the JSON schema field "customData".
	CustomData *CustomDataType `json:"customData,omitempty" yaml:"customData,omitempty" mapstructure:"customData,omitempty"`

	// The Charging Station SHALL only report events with a severity number lower than
	// or equal to this severity.
	// The severity range is 0-9, with 0 as the highest and 9 as the lowest severity
	// level.
	//
	// The severity levels have the following meaning: +
	// *0-Danger* +
	// Indicates lives are potentially in danger. Urgent attention is needed and
	// action should be taken immediately. +
	// *1-Hardware Failure* +
	// Indicates that the Charging Station is unable to continue regular operations
	// due to Hardware issues. Action is required. +
	// *2-System Failure* +
	// Indicates that the Charging Station is unable to continue regular operations
	// due to software or minor hardware issues. Action is required. +
	// *3-Critical* +
	// Indicates a critical error. Action is required. +
	// *4-Error* +
	// Indicates a non-urgent error. Action is required. +
	// *5-Alert* +
	// Indicates an alert event. Default severity for any type of monitoring event.  +
	// *6-Warning* +
	// Indicates a warning event. Action may be required. +
	// *7-Notice* +
	// Indicates an unusual event. No immediate action is required. +
	// *8-Informational* +
	// Indicates a regular operational event. May be used for reporting, measuring
	// throughput, etc. No action is required. +
	// *9-Debug* +
	// Indicates information useful to developers for debugging, not useful during
	// operations.
	//
	//
	//
	Severity int `json:"severity" yaml:"severity" mapstructure:"severity"`
}

// UnmarshalJSON implements json.Unmarshaler.
func (j *SetMonitoringLevelRequestJson) UnmarshalJSON(value []byte) error {
	var raw map[string]interface{}
	if err := json.Unmarshal(value, &raw); err != nil {
		return err
	}
	if _, ok := raw["severity"]; raw != nil && !ok {
		return fmt.Errorf("field severity in SetMonitoringLevelRequestJson: required")
	}
	type Plain SetMonitoringLevelRequestJson
	var plain Plain
	if err := json.Unmarshal(value, &plain); err != nil {
		return err
	}
	*j = SetMonitoringLevelRequestJson(plain)
	return nil
}
